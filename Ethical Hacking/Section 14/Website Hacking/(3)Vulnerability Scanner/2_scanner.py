import requests
import re
from bs4 import BeautifulSoup
from urllib.parse import urljoin


class Scanner():
    def __init__(self, url, ignore_link):
        self.target_url = url
        self.all_links = []
        self.session = requests.Session()
        self.ignore_links = ignore_link
        # self.crawler()

    def extracting_links_from(self, response):
        try:
            get_response = response.content.decode()
        except Exception as e:
            print(e)
            return []
        return re.findall(r'(?:href=")(.*?)"', get_response)

    def crawler(self, url=None):
        if url is None:
            url = self.target_url
        get_response = self.session.get(url)
        get_link = self.extracting_links_from(get_response)

        for link in get_link:
            link = urljoin(self.target_url, link)

            if "#" in link:
                link = link.split("#")[0]

            if url in link and link not in self.all_links and link not in self.ignore_links:
                self.all_links.append(link)
                print(f"[+]Link-> {link}")
                self.crawler(link)

    def __extracting_form(self, url):
        response = self.session.get(url)
        try:
            soup = BeautifulSoup(response.content.decode(), "html.parser")
        except Exception as e:
            return []
        return soup.find_all("form")

    def submit_form(self, form, value, url):
        action = form.get("action")
        method = form.get("method")
        input_list = form.find_all("input")
        post_data = {}
        for input_data in input_list:
            input_name = input_data.get("name")
            input_type = input_data.get("type")
            input_value = input_data.get("value")

            if input_type == "text":
                input_value = value

            post_data[input_name] = input_value

        # url = self.target_url + "/" + action
        if method == "post":
            return self.session.post(url, data=post_data)
        return self.session.get(url, params=post_data)

    def xss_vulnerability_in_form(self, form, url):
        test_script = '<ScriPt>"alert"</sCripT>'
        response = self.submit_form(form, test_script, url)
        return test_script in response.content.decode()

    def xss_vulnerability_in_link(self, url):
        test_script = '<ScriPt>"alert"</sCripT>'
        url = url.replace("=", "=" + test_script)
        response = self.session.get(url)
        return test_script in response.content.decode()

    def run_scanner(self):
        for link in self.all_links:
            forms = self.__extracting_form(link)
            for form in forms:
                print(f"[+]Testing form in {link}")
                if self.xss_vulnerability_in_form(form=form, url=link):
                    print(f"\n\n\n[****] XSS discover in {link} in the following form")
                    print(form)

            if "#" in link:
                print(f"[+] Testing link {link}")
                if self.xss_vulnerability_in_link(url=link):
                    print(f"\n\n\n[****] XSS discover in {link}")


ignore_links = ['http://192.168.67.130/dvwa/logout.php']
target_url = "http://192.168.67.130/dvwa/"
data_dic = {"username": "admin", "password": "password", "Login": "submit"}
vul_scanner = Scanner(url=target_url, ignore_link=ignore_links)
response = vul_scanner.session.post(vul_scanner.target_url + "/login.php", data=data_dic)
vul_scanner.crawler()
vul_scanner.run_scanner()
